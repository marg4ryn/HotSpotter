name: CI/CD - Vue to GKE

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE: ${{ secrets.IMAGE_NAME }}
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  CLUSTER_ZONE: ${{ secrets.GKE_CLUSTER_ZONE }}
  REGION: ${{ secrets.GCP_REGION }}
  USE_GKE_GCLOUD_AUTH_PLUGIN: True
  DEPLOYMENT_NAME: frontend
  CONTAINER_NAME: frontend-container

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '25'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: echo test #npm run test run

  build-deploy:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use gcloud
        run: gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

      - name: Build and push Docker image
        run: |
          docker build -t ${IMAGE}:$GITHUB_SHA -t ${IMAGE}:latest .
          docker push ${IMAGE}:$GITHUB_SHA
          docker push ${IMAGE}:latest

      - name: Install GKE auth plugin
        run: gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_ZONE --project $PROJECT_ID

      - name: Deploy new image
        run: |
          kubectl set image deployment/${DEPLOYMENT_NAME} ${CONTAINER_NAME}=${IMAGE}:$GITHUB_SHA
          kubectl rollout status deployment/${DEPLOYMENT_NAME}
